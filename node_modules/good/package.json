{
  "_args": [
    [
      {
        "raw": "good",
        "scope": null,
        "escapedName": "good",
        "name": "good",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/fahmad/code/pangea-training/myproject"
    ]
  ],
  "_from": "good@latest",
  "_id": "good@7.3.0",
  "_inCache": true,
  "_location": "/good",
  "_nodeVersion": "8.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/good-7.3.0.tgz_1503496803333_0.12386770476587117"
  },
  "_npmUser": {
    "name": "arb",
    "email": "arbretz@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {
    "hoek": "4.2.0",
    "isemail": "2.2.1",
    "items": "2.1.1",
    "topo": "2.0.2"
  },
  "_requested": {
    "raw": "good",
    "scope": null,
    "escapedName": "good",
    "name": "good",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://npme.walmart.com/good/-/good-7.3.0.tgz",
  "_shasum": "25da74d51f336692ec86fe8d6533453585fa85fe",
  "_shrinkwrap": null,
  "_spec": "good",
  "_where": "/Users/fahmad/code/pangea-training/myproject",
  "bugs": {
    "url": "https://github.com/hapijs/good/issues"
  },
  "dependencies": {
    "hoek": "4.x.x",
    "joi": "10.x.x",
    "oppsy": "1.x.x",
    "pumpify": "1.3.x"
  },
  "description": "Server and process monitoring plugin",
  "devDependencies": {
    "async": "2.5.x",
    "code": "4.x.x",
    "hapi": "16.x.x",
    "lab": "14.x.x",
    "wreck": "12.x.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-bZ4clzBw75zI424QUOrOnzwSM/7BrJ/2xTX75IT3spIZ052OPYEzLqdSt4mj/zZfs2OU52+/428QEmvyKUscUQ==",
    "shasum": "25da74d51f336692ec86fe8d6533453585fa85fe",
    "tarball": "https://registry.npmjs.org/good/-/good-7.3.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "d490838f6b9209fc71fa5f0539aa979655a7c43d",
  "homepage": "https://github.com/hapijs/good#readme",
  "keywords": [
    "process",
    "monitor",
    "log",
    "report",
    "hapi",
    "plugin"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "lloydbenson",
      "email": "lloyd.benson@gmail.com"
    },
    {
      "name": "hueniverse",
      "email": "eran@hammer.io"
    },
    {
      "name": "wyatt",
      "email": "wpreul@gmail.com"
    },
    {
      "name": "arb",
      "email": "arbretz@gmail.com"
    },
    {
      "name": "marsup",
      "email": "nicolas@morel.io"
    },
    {
      "name": "nlf",
      "email": "quitlahok@gmail.com"
    }
  ],
  "name": "good",
  "optionalDependencies": {},
  "peerDependencies": {
    "hapi": ">=10.x.x"
  },
  "readme": "![good Logo](images/good.png)\n\n[**hapi**](https://github.com/hapijs/hapi) process monitoring\n\n[![Build Status](https://secure.travis-ci.org/hapijs/good.svg)](http://travis-ci.org/hapijs/good)[![Current Version](https://img.shields.io/npm/v/good.svg)](https://www.npmjs.com/package/good)\n\nLead Maintainer: [Adam Bretz](https://github.com/arb)\n\n\n**good** is a hapi plugin to monitor and report on a variety of hapi server events as well as ops information from the host machine. It listens for events emitted by hapi server instances and pushes standardized events to a collection of streams.\n\n## Example Usage\n\n```javascript\nconst Hapi = require('hapi');\nconst server = new Hapi.Server();\nserver.connection();\n\nconst options = {\n    ops: {\n        interval: 1000\n    },\n    reporters: {\n        myConsoleReporter: [{\n            module: 'good-squeeze',\n            name: 'Squeeze',\n            args: [{ log: '*', response: '*' }]\n        }, {\n            module: 'good-console'\n        }, 'stdout'],\n        myFileReporter: [{\n            module: 'good-squeeze',\n            name: 'Squeeze',\n            args: [{ ops: '*' }]\n        }, {\n            module: 'good-squeeze',\n            name: 'SafeJson'\n        }, {\n            module: 'good-file',\n            args: ['./test/fixtures/awesome_log']\n        }],\n        myHTTPReporter: [{\n            module: 'good-squeeze',\n            name: 'Squeeze',\n            args: [{ error: '*' }]\n        }, {\n            module: 'good-http',\n            args: ['http://prod.logs:3000', {\n                wreck: {\n                    headers: { 'x-api-key': 12345 }\n                }\n            }]\n        }]\n    }\n};\n\nserver.register({\n    register: require('good'),\n    options,\n}, (err) => {\n\n    if (err) {\n        return console.error(err);\n    }\n    server.start(() => {\n        console.info(`Server started at ${ server.info.uri }`);\n    });\n\n});\n\n```\n\nThis example does the following:\n\n1. Sets up the reporter named `myConsoleReporter` listening for 'response' and 'log' events and writes them to `process.stdout`.\n2. Sets up the reporter named `myFileReporter` to listen for 'ops' events and logs them to `./test/fixtures/awesome_log`.\n3. Sets up the reporter named `myHTTPReporter` to listen for error events and POSTs them to `http://prod.logs:3000` with additional settings to passed into `Wreck`\n\nSee the [Reporter Interface section of the API documentation](https://github.com/hapijs/good/blob/master/API.md#reporter-interface) on how to configure reporters.\n\n**NOTE**: Ensure calling `server.connection` prior to registering `Good`. `request` and `response` event listeners are only registered on connections that exist on `server` at the time `Good` is registered.\n\nLooking for more examples? Check out the [examples folder](https://github.com/hapijs/good/tree/master/examples).\n\n## Existing streams\n\nThe following streams are maintained by the hapi community and are known to work with good. Any transform or write stream can work with good, these are just a few inside the hapijs organization.\n\n- [good-squeeze](https://github.com/hapijs/good-squeeze)\n- [good-file](https://github.com/hapijs/good-file)\n- [good-http](https://github.com/hapijs/good-http)\n- [good-console](https://github.com/hapijs/good-console)\n\n## API\n\nSee the [API Reference](API.md).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/good.git"
  },
  "scripts": {
    "test": "lab -m 5000 -t 100 -v -La code"
  },
  "version": "7.3.0"
}
