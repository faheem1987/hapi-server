{
  "_args": [
    [
      {
        "raw": "oppsy@1.x.x",
        "scope": null,
        "escapedName": "oppsy",
        "name": "oppsy",
        "rawSpec": "1.x.x",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/fahmad/code/pangea-training/myproject/node_modules/good"
    ]
  ],
  "_from": "oppsy@>=1.0.0 <2.0.0",
  "_id": "oppsy@1.0.2",
  "_inCache": true,
  "_location": "/oppsy",
  "_nodeVersion": "4.4.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/oppsy-1.0.2.tgz_1463749003052_0.6664593361783773"
  },
  "_npmUser": {
    "name": "arb",
    "email": "arbretz@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "oppsy@1.x.x",
    "scope": null,
    "escapedName": "oppsy",
    "name": "oppsy",
    "rawSpec": "1.x.x",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/good"
  ],
  "_resolved": "https://npme.walmart.com/oppsy/-/oppsy-1.0.2.tgz",
  "_shasum": "98014cd6967653a83cfffa554226dc90050baad4",
  "_shrinkwrap": null,
  "_spec": "oppsy@1.x.x",
  "_where": "/Users/fahmad/code/pangea-training/myproject/node_modules/good",
  "bugs": {
    "url": "https://github.com/hapijs/oppsy/issues"
  },
  "dependencies": {
    "hoek": "4.x.x",
    "items": "2.x.x"
  },
  "description": "An EventEmitter useful for collecting hapi server ops information",
  "devDependencies": {
    "code": "2.x.x",
    "hapi": "13.x.x",
    "lab": "10.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "98014cd6967653a83cfffa554226dc90050baad4",
    "tarball": "https://registry.npmjs.org/oppsy/-/oppsy-1.0.2.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "3faf083bd767009239f1138ae168635f57a49997",
  "homepage": "https://github.com/hapijs/oppsy#readme",
  "keywords": [
    "hapi",
    "ops",
    "hapi-plugin"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "arb",
      "email": "arbretz@gmail.com"
    }
  ],
  "name": "oppsy",
  "optionalDependencies": {},
  "readme": "# oppsy\n\nAn EventEmitter useful for collecting hapi server ops information.\n\n[![Build Status](https://secure.travis-ci.org/hapijs/oppsy.svg)](http://travis-ci.org/hapijs/oppsy)![Current Version](https://img.shields.io/npm/v/oppsy.svg)\n\nLead Maintainer: [Adam Bretz](https://github.com/arb)\n\n## Usage\n\n```js\nconst Oppsy = require('oppsy');\nconst Hapi = require('hapi');\n\nconst server = new Hapi.Server();\nconst oppsy = new Oppsy(server);\noppsy.on('ops', (data) => {\n  console.log(data);\n});\n\nserver.start(() => {\n  oppsy.start(1000);\n});\n```\n\nThis creates a new Oppsy object and starts collecting information ever 1000 miliseconds\n\n### new Oppsy(server, [config])\n\nCreates a new Oppsy object.\n- `server` - the hapi server to collect information about.\n- `[config]` - optional configuration object\n  - `httpAgents` - the list of httpAgents to report socket information about. Can be a single http.Agent or an array of agents objects. Defaults to Http.globalAgent.\n  - `httpsAgents` - the list of httpsAgents to report socket information about. Can be a single https.Agent or an array of agents. Defaults to Https.globalAgent.\n\nThe oppsy object is an EventEmitter so it exposes the same API(`.on` and `.emit`) as the Node EventEmitter object. After it is started, it emits an \"ops\" event after a set interval with the collected ops information as the event payload.\n\n#### oppsy.start(interval)\n\nStarts an Oppsy object collecting network and server information.\n- `interval` - number of seconds to wait between each data sampling.\n\n#### oppsy.stop()\n\nStops an Oppsy objects collecting.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/oppsy.git"
  },
  "scripts": {
    "test": "lab -a code -t 100 -Lv"
  },
  "version": "1.0.2"
}
